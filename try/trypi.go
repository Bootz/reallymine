// 20 october 2015
package main

import (
	"os"
	"io/ioutil"
	"crypto/aes"
)

var pi = []byte{
//	0x03, 0x14, 0x15, 0x92, 0x65, 0x35, 0x89, 0x79, 0x2B, 0x99, 0x2D, 0xDF, 0xA2, 0x32, 0x49, 0xD6,
	0x03, 0x14, 0x15, 0x92, 0x65, 0x35, 0x89, 0x79, 0x32, 0x38, 0x46, 0x26, 0x43, 0x38, 0x32, 0x79,
	0xFC, 0xEB, 0xEA, 0x6D, 0x9A, 0xCA, 0x76, 0x86, 0xCD, 0xC7, 0xB9, 0xD9, 0xBC, 0xC7, 0xCD, 0x86,
}

func swap(b []byte) {
	for i := 0; i < len(b); i += 4 {
		b[i + 0], b[i + 3] = b[i + 3], b[i + 0]
		b[i + 1], b[i + 2] = b[i + 2], b[i + 1]
	}
}

func reverse(b []byte) {
	for i := 0; i < len(b) / 2; i++ {
		n := len(b) - i - 1
		b[i], b[n] = b[n], b[i]
	}
}

func main() {
	b, _ := ioutil.ReadAll(os.Stdin)
//	swap(b)
//	swap(pi)
	reverse(pi)
	a, _ := aes.NewCipher(pi)
	for i := 0; i < len(b); i += len(pi) {
		reverse(b[i:i + 16])
		a.Decrypt(b[i:], b[i:])
		reverse(b[i:i + 16])
	}
	os.Stdout.Write(b)
}
